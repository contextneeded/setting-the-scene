// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level_0":
            case "level_0":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,myTiles.tile1], TileScale.Sixteen);
            case "level":
            case "level":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [], TileScale.Sixteen);
            case "level_1":
            case "level_1":return tiles.createTilemap(hex`1000100000000000000000000000000000000000000000010000010000000000000000000000000100000100000000000000000000000001000001000000000000000000000000000000000000000000000000000000010000000001000000000000000000000001010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`, img`
. . . . . . . . . . . . . . . . 
. . . 2 . . 2 . . . . . . . . . 
. . . 2 . . 2 . . . . . . . . . 
. . . 2 . . 2 . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . 2 . . . . 2 . . . . . . . . 
. . . 2 2 2 2 . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,myTiles.tile1], TileScale.Sixteen);
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
. . . . . . 2 2 2 2 . . . . . . 
. . . . . . . . . . 2 . . . . . 
. . 2 2 2 2 . 2 2 2 2 2 2 . . . 
. . 2 . . . 2 . . . . 2 2 2 . . 
2 2 2 . . 2 2 . . . . 2 2 . . . 
. 2 . . . 2 . . . . . 2 . 2 . . 
2 2 . . 2 2 . . . . . 2 . 2 . . 
2 . . 2 . 2 2 2 2 2 2 2 . . 2 . 
2 . . 2 . . . . 2 . 2 2 . . 2 . 
2 2 2 . 2 . 2 2 2 2 2 . 2 2 2 2 
2 2 2 . 2 2 2 2 . 2 2 . 2 . . . 
. 2 . . . . 2 . . 2 2 . 2 . . . 
. 2 . . . . . 2 2 . 2 2 2 . . . 
. 2 2 . . . . . . . . . . . . . 
. 2 2 2 . 2 . . . . . . . . . . 
. 2 2 2 2 2 2 2 . . . . . . . . 
`, [myTiles.transparency16,sprites.castle.tileDarkGrass2,sprites.builtin.forestTiles0,sprites.castle.tilePath2,sprites.castle.tileGrass2], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "tile1":return tile1;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
